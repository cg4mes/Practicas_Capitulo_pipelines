name: save images from nasa

on: 
  push:
    branches:
      - save-images-from-nasa

jobs:
  read-json:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Read json file
      id: readjson
      uses: antifree/json-to-variables@v1.2.0
      with:
        filename: 'dates.json'
        prefix: 'dates'

    - name: Count environment variables
      id: count_vars
      run: |
        vars=()
        for var in $(env | grep '^dates_dates_' | cut -d'=' -f1); do
          vars+=("${!var}")
        done
        echo "vars=${vars[*]}" >> $GITHUB_ENV

    - name: Set matrix for jobs
      id: set_matrix
      run: |
        matrix_json=$(echo "[\"$(echo ${vars[*]} | sed 's/ /\", \"/g')\"]")
        echo "matrix=$matrix_json" >> "$GITHUB_OUTPUT"

  process-images:
    runs-on: ubuntu-latest
    needs: read-json
    strategy:
      matrix:
        dates: ${{ fromJson(needs.read-json.outputs.matrix) }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Hacer una peticiÃ³n GET
      id: fetch_image
      run: |
        echo "Consultando la fecha: ${{ matrix.dates }}"
        response=$(curl -s -X GET "https://api.nasa.gov/planetary/apod?api_key=${{ secrets.API_KEY }}&date=${{ matrix.dates }}")
        echo "Respuesta: $response"
        echo "response=$response" >> $GITHUB_ENV  # Guardar la respuesta en una variable de entorno

    - name: Extraer URL de la imagen
      id: extract_image_url
      run: |
        image_url=$(echo "$response" | jq -r '.url')
        echo "image_url=$image_url" >> $GITHUB_ENV
        echo "URL de la imagen: $image_url"

    - name: "Save cat image from URL" 
      uses: minituff/save-image@v1.4
      with:
        url: $image_url
        imagePath: 'media/imagen.jpg'

    - name: Upload JSON artifact
      uses: actions/upload-artifact@v4
      with:
        name: imagen-nasa
        path: media/imagen.jpg

    - name: Mostrar detalles de la imagen
      run: |
        echo "Imagen descargada: $(ls -l media/imagen.jpg)"   
